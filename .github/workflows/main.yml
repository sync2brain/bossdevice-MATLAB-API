name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  # Allows you to run this workflow calling it from another workflow
  workflow_call:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check:
    strategy:
      fail-fast: false # Run with every MATLAB version independently
      matrix:
        matlabVer: [R2023a] # List of MATLAB releases to test
    runs-on: matlab
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:  
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          token: ${{ secrets.REPO_READ_TOKEN }}

      - name: Cache MATLAB build files
        uses: actions/cache@v3
        with:
          key: matlab-buildtool
          path: |
            buildUtilities/.buildtool

      - name: Run MATLAB command
        run: |
          &"$env:ProgramFiles\MATLAB\${{ matrix.matlabVer }}\bin\matlab.exe" -batch "openProject(pwd); cd('buildUtilities'); buildtool check"

      - name: Archive check results
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: code-issues
          path: checkResults.json

  test:
    strategy:
      fail-fast: false # Run with every MATLAB version independently
      matrix:
        matlabVer: [R2023a] # List of MATLAB releases to test
    runs-on: matlab
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:  
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          token: ${{ secrets.REPO_READ_TOKEN }}

      - name: Cache MATLAB build files
        uses: actions/cache@v3
        with:
          key: matlab-buildtool
          path: |
            buildUtilities/.buildtool

      - name: Download firmware artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.REPO_READ_TOKEN }}
          workflow: main.yml
          repo: sync2brain/bossdevice-firmware
          branch: main
          search_artifacts: true
          name: bossdevice-firmware-${{ matrix.matlabVer }}
          path: toolbox/dependencies/firmware/${{ matrix.matlabVer }}
          if_no_artifact_found: fail

      - name: Run MATLAB command
        run: |
          &"$env:ProgramFiles\MATLAB\${{ matrix.matlabVer }}\bin\matlab.exe" -batch "openProject(pwd); cd('buildUtilities'); buildtool test({'noHW','bdConnected'})"

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: success() || failure()
        with:
          action_fail: true
          files: |
            results.xml

  uploadFirmwareDir:
    runs-on: matlab
    needs: test
    steps:
      - name: Upload firmware directory
        uses: actions/upload-artifact@v3
        with:
          name: firmwareFolder
          path: toolbox/dependencies/firmware
          if-no-files-found: error
